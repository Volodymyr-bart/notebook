{"version":3,"file":"static/js/465.a12ed731.chunk.js","mappings":"+NACA,EAAuB,wB,SCKVA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,oBAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA0CR,EAAAA,EAAAA,WAAS,GAAnD,eAAOS,EAAP,KAAsBC,EAAtB,KACA,GAA0CV,EAAAA,EAAAA,UAAS,uBAAnD,eAAOW,EAAP,KAAsBC,EAAtB,KACA,GAAkCZ,EAAAA,EAAAA,WAAS,GAA3C,eAAOa,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WAEND,GADET,IAAcM,EAKnB,GAAE,CAACN,EAAYM,IAEhB,IAAMK,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,SAAAC,GAClB,OAAQA,EAAEC,OAAOC,MACf,IAAK,QACHjB,GAAc,GACd,MACF,IAAK,WACHM,GAAiB,GAMtB,EAsCD,OACE,kBAAMY,UAAWC,EAAUC,SAbR,SAAAL,GACnBA,EAAEM,iBACF,IAAMC,EAAOP,EAAEQ,cACfX,GACEY,EAAAA,EAAAA,IAAM,CACJ3B,MAAAA,EACAM,SAAAA,KAGJmB,EAAKG,OACN,EAGoDC,aAAa,MAAhE,UACG3B,GAAcE,IACb,gBAAK0B,MAAO,CAAEC,MAAO,OAArB,SAA+B3B,KAEjC,SAAC4B,EAAA,EAAD,CACEC,MAAOjC,EACPkC,OAAQ,SAAAhB,GAAC,OAAID,EAAYC,EAAhB,EACTE,KAAK,QACLe,KAAK,QACLC,YAAY,mBACZC,SAAU,SAAAnB,GAAC,OA/CI,SAAAA,GACnBjB,EAASiB,EAAEC,OAAOc,OAGfK,OAAOpB,EAAEC,OAAOc,OACdM,cACAC,MACC,yJAKJnC,EAAc,IAFdA,EAAc,eAIjB,CAiCoBoC,CAAavB,EAAjB,IAEZV,GAAiBE,IAChB,gBAAKoB,MAAO,CAAEC,MAAO,OAArB,SAA+BrB,KAEjC,SAACsB,EAAA,EAAD,CACEC,MAAO3B,EACP4B,OAAQ,SAAAhB,GAAC,OAAID,EAAYC,EAAhB,EACTE,KAAK,WACLe,KAAK,WACLC,YAAY,sBACZC,SAAU,SAAAnB,GAAC,OA3CO,SAAAA,GACtBX,EAAYW,EAAEC,OAAOc,OACjBf,EAAEC,OAAOc,MAAMS,OAAS,EAC1B/B,EAAiB,mCAEjBA,EAAiB,GAEpB,CAoCoBgC,CAAgBzB,EAApB,KAEb,SAAC0B,EAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAWlC,EAAWuB,KAAK,SAAvD,qBAKL,ECrGc,SAASY,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAClD,EAAD,MAGL,C","sources":["webpack://notebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\"};","import { Button, TextField } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [emailError, setEmailError] = useState('Need write email');\n  const [password, setPassword] = useState('');\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [passwordError, setPasswordError] = useState('Need write password');\n  const [formValid, setformValid] = useState(false);\n\n  useEffect(() => {\n    if (emailError || passwordError) {\n      setformValid(false);\n    } else {\n      setformValid(true);\n    }\n  }, [emailError, passwordError]);\n\n  const dispatch = useDispatch();\n\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n\n    if (\n      !String(e.target.value)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailError('Ivalid Email');\n    } else {\n      setEmailError('');\n    }\n  };\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    if (e.target.value.length < 7) {\n      setPasswordError('Password must longest 7 symbols');\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      {emailDirty && emailError && (\n        <div style={{ color: 'red' }}>{emailError}</div>\n      )}\n      <TextField\n        value={email}\n        onBlur={e => blurHandler(e)}\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Enter your email\"\n        onChange={e => emailHandler(e)}\n      />\n      {passwordDirty && passwordError && (\n        <div style={{ color: 'red' }}>{passwordError}</div>\n      )}\n      <TextField\n        value={password}\n        onBlur={e => blurHandler(e)}\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        onChange={e => passwordHandler(e)}\n      />\n      <Button variant=\"contained\" disabled={!formValid} type=\"submit\">\n        Login\n      </Button>\n    </form>\n  );\n};\n\n// const handleSubmit = e => {\n//   e.preventDefault();\n//   const form = e.currentTarget;\n//   dispatch(\n//     logIn({\n//       email: form.elements.email.value,\n//       password: form.elements.password.value,\n//     })\n//   );\n//   form.reset();\n// };\n\n// return (\n//   <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n//     <label className={css.label}>\n//       Email\n//       <input type=\"email\" name=\"email\" />\n//     </label>\n//     <label className={css.label}>\n//       Password\n//       <input type=\"password\" name=\"password\" />\n//     </label>\n//     <button type=\"submit\">Log In</button>\n//   </form>\n// );\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","useState","email","setEmail","emailDirty","setEmailDirty","emailError","setEmailError","password","setPassword","passwordDirty","setPasswordDirty","passwordError","setPasswordError","formValid","setformValid","useEffect","dispatch","useDispatch","blurHandler","e","target","name","className","css","onSubmit","preventDefault","form","currentTarget","logIn","reset","autoComplete","style","color","TextField","value","onBlur","type","placeholder","onChange","String","toLowerCase","match","emailHandler","length","passwordHandler","Button","variant","disabled","Login","Helmet"],"sourceRoot":""}