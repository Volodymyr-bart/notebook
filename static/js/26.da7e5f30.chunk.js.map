{"version":3,"file":"static/js/26.da7e5f30.chunk.js","mappings":"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","sources":["webpack://notebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\"};","import { Button, TextField } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [nameDirty, setNameDirty] = useState(false);\n  const [nameError, setNameError] = useState('Need write name');\n  const [email, setEmail] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [emailError, setEmailError] = useState('Need write email');\n  const [password, setPassword] = useState('');\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [passwordError, setPasswordError] = useState('Need write password');\n  const [formValid, setformValid] = useState(false);\n\n  useEffect(() => {\n    if (nameError || emailError || passwordError) {\n      setformValid(false);\n    } else {\n      setformValid(true);\n    }\n  }, [nameError, emailError, passwordError]);\n\n  const dispatch = useDispatch();\n\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'name':\n        setNameDirty(true);\n        break;\n      case 'email':\n        setEmailDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const nameHandler = e => {\n    setName(e.target.value);\n    if (e.target.value.length < 3) {\n      setNameError('Enter name more 3 symbols');\n    } else {\n      setNameError('');\n    }\n  };\n  const emailHandler = e => {\n    setEmail(e.target.value);\n\n    if (\n      !String(e.target.value)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailError('Ivalid Email');\n    } else {\n      setEmailError('');\n    }\n  };\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    if (e.target.value.length < 7) {\n      setPasswordError('Password must longest 7 symbols');\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      {nameDirty && nameError && (\n        <div style={{ color: 'red' }}>{nameError}</div>\n      )}\n      <TextField\n        value={name}\n        onBlur={e => blurHandler(e)}\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        onChange={e => nameHandler(e)}\n      />\n      {emailDirty && emailError && (\n        <div style={{ color: 'red' }}>{emailError}</div>\n      )}\n      <TextField\n        value={email}\n        onBlur={e => blurHandler(e)}\n        name=\"email\"\n        type=\"email\"\n        placeholder=\"Enter your email\"\n        onChange={e => emailHandler(e)}\n      />\n      {passwordDirty && passwordError && (\n        <div style={{ color: 'red' }}>{passwordError}</div>\n      )}\n      <TextField\n        value={password}\n        onBlur={e => blurHandler(e)}\n        name=\"password\"\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        onChange={e => passwordHandler(e)}\n      />\n      <Button variant=\"contained\" disabled={!formValid} type=\"submit\">\n        Register\n      </Button>\n    </form>\n  );\n};\n\n//  const handleSubmit = e => {\n//    e.preventDefault();\n//    const form = e.currentTarget;\n//    dispatch(\n//      register({\n//        name: form.elements.name.value,\n//        email: form.elements.email.value,\n//        password: form.elements.password.value,\n//      })\n//    );\n//    form.reset();\n//  };\n\n// return (\n//   <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n//     <label className={css.label}>\n//       Username\n//       <input type=\"text\" name=\"name\" />\n//     </label>\n//     <label className={css.label}>\n//       Email\n//       <input type=\"email\" name=\"email\" />\n//     </label>\n//     <label className={css.label}>\n//       Password\n//       <input type=\"password\" name=\"password\" />\n//     </label>\n//     <button type=\"submit\">Register</button>\n//   </form>\n// );\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","useState","name","setName","nameDirty","setNameDirty","nameError","setNameError","email","setEmail","emailDirty","setEmailDirty","emailError","setEmailError","password","setPassword","passwordDirty","setPasswordDirty","passwordError","setPasswordError","formValid","setformValid","useEffect","dispatch","useDispatch","blurHandler","e","target","className","css","onSubmit","preventDefault","form","currentTarget","register","reset","autoComplete","style","color","TextField","value","onBlur","type","placeholder","onChange","length","nameHandler","String","toLowerCase","match","emailHandler","passwordHandler","Button","variant","disabled","Register","Helmet"],"sourceRoot":""}